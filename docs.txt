Realtime chat app

Tehnologii folosite:
Frontend: React.JS (framework javascript), HTML5, Scss (preprocesor css), Bootstrap (framework css)
Backend: Node.JS
Realtime: Socket.io
Database: PostgreSQL
Authentication: via JWT
Versionare: GitHub

Cum sa rulezi aplicatia local:
1. docker-compose
2. npm 

Oricare din metode necesita sa ai aplicatia local
- git clone https://github.com/Claudiu98n/realtime-chat-app.git

1 ------------------------------
requirements: 
- docker instalat (https://docs.docker.com/desktop/windows/install/)
- Node si NPM instalate (https://nodejs.org/en/download/)
- git instalat (https://git-scm.com/download/win)

cd root_proiect/packages
in packages se afla docker-compose.yml, astfel se poate rula:
docker-compose up -> o sa porneasca 4 containere:
    - react_fe -> se poate accesa pe http://localhost:3000
    - node_be -> se afla pe http://localhost:5000
    - db -> se afla pe http://localhost:5432
    - adminer -> se poate accesa pe http://localhost:8080

probabil o sa ai nevoie sa intri doar:
    - in adminer, in care se poate vizualiza si gestiona continutul bazei de date (localhost:8080)
    - in frontend, unde se realizeaza efectiv interactiunea dintre utilizatori

2 ------------------------------
requirements:
- Node si NPM instalate (https://nodejs.org/en/download/)
- git instalat (https://git-scm.com/download/win)
- PostgreSQL instalat (https://www.postgresqltutorial.com/install-postgresql/) pe port 5432

cd root_proiect/packages/client
aici se executa npm install, dupa instalare npm start pentru a porni frontend

cd root_proiect/packages/server
aici se executa npm install, dupa instalare npm start pentru a porni backend

analog metoda docker, frontend se gaseste pe localhost:3000, backend :5000, db :5432

--
recomand prima metoda - e mult mai rapid :D

--
versionare git
sa urci proiectul pe github o sa ai nevoie sa creezi un repo (https://docs.github.com/en/get-started/quickstart/create-a-repo)

pentru ca proiectul a fost si pana acum versionat de mine, in root se gaseste un folder .git care contine un istoric al commit-urilor
recomandat ar fi sa il stergi inainte sa urci pe repo, nu vrem sa vada proful istoricul

comenzi urcare in repo:
git init
git add .
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/Claudiu98n/realtime-chat-app.git (aici inlocuieste url cu url-ul repoului pe care l-ai creat)
git push -u origin main



